version: '3.4'

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1

services:
  database:
    image: postgres:16.2
    container_name: database
    environment:
      - POSTGRES_MULTIPLE_DATABASES=TaskTrackerDataBase,AuthDataBase,BillingDataBase
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=mysecretpassword
    ports:
      - "5432:5432"
    networks:
      network:
        ipv4_address: 10.5.0.2
  rabbitmq:
    image: rabbitmq:3.12-management
    hostname: rabbitmq
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    networks:
      network:
        ipv4_address: 10.5.0.3
  redis:
    image: redis/redis-stack:7.2.0-v9
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      network:
        ipv4_address: 10.5.0.7
  jwtauth:
    image: ${DOCKER_REGISTRY-}jwtauth
    container_name: auth
    environment:
      WAIT_HOSTS: database:5432, rabbitmq:5672
    depends_on:
      - database
      - rabbitmq
    build:
      context: .
      dockerfile: JwtAuth/Dockerfile
    ports:
      - "5001:5001"
    networks:
      network:
        ipv4_address: 10.5.0.4
  tasktracker:
    image: ${DOCKER_REGISTRY-}tasktracker
    container_name: tasktracker
    environment:
      WAIT_HOSTS: jwtauth:5001
    depends_on:
      - jwtauth
    build:
      context: .
      dockerfile: TaskTracker/Dockerfile
    ports:
      - "5000:5000"
    networks:
      network:
        ipv4_address: 10.5.0.5
  billing:
    image: ${DOCKER_REGISTRY-}billing
    container_name: billing
    environment:
      WAIT_HOSTS: tasktracker:5000, redis:6379
    depends_on:
      - tasktracker
      - redis
    build:
      context: .
      dockerfile: Billing/Dockerfile
    ports:
      - "5002:5002"
    networks:
      network:
        ipv4_address: 10.5.0.6
  analytics:
    image: ${DOCKER_REGISTRY-}analytics
    container_name: analytics
    environment:
      WAIT_HOSTS: tasktracker:5000, jwtauth:5001, billing:5002
    depends_on:
      - tasktracker
      - jwtauth
      - billing
    build:
      context: .
      dockerfile: Analytics/Dockerfile
    ports:
      - "5003:5003"
    networks:
      network:
        ipv4_address: 10.5.0.8
